CREATE TABLE allowances
(
    allowance_id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    employee_id    INTEGER,
    allowance_type VARCHAR(255)                             NOT NULL,
    amount         DOUBLE PRECISION                         NOT NULL,
    start_date     date                                     NOT NULL,
    end_date       date,
    description    VARCHAR(255),
    created_at     TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_allowances PRIMARY KEY (allowance_id)
);

CREATE TABLE attendance
(
    attendance_id  INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    employee_id    INTEGER,
    date           date                                     NOT NULL,
    check_in       TIMESTAMP WITHOUT TIME ZONE,
    check_out      TIMESTAMP WITHOUT TIME ZONE,
    status         VARCHAR(255),
    overtime_hours DOUBLE PRECISION,
    note           VARCHAR(255),
    created_at     TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_attendance PRIMARY KEY (attendance_id)
);

CREATE TABLE contracts
(
    contract_id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    employee_id   INTEGER,
    contract_type VARCHAR(255)                             NOT NULL,
    contract_code VARCHAR(255)                             NOT NULL,
    start_date    date                                     NOT NULL,
    end_date      date,
    base_salary   DOUBLE PRECISION                         NOT NULL,
    sign_date     date                                     NOT NULL,
    is_present    BOOLEAN,
    created_at    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_contracts PRIMARY KEY (contract_id)
);

CREATE TABLE departments
(
    department_id        INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    department_code      VARCHAR(255),
    department_name      VARCHAR(255),
    parent_department_id INTEGER,
    description          VARCHAR(255),
    created_at           TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_departments PRIMARY KEY (department_id)
);

CREATE TABLE dependents
(
    dependent_id     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    employee_id      INTEGER,
    full_name        VARCHAR(255)                             NOT NULL,
    relationship     VARCHAR(255)                             NOT NULL,
    birth_date       date                                     NOT NULL,
    id_number        VARCHAR(255),
    is_tax_dependent BOOLEAN,
    created_at       TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_dependents PRIMARY KEY (dependent_id)
);

CREATE TABLE employee_skills
(
    skill_id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    employee_id         INTEGER,
    skill_name          VARCHAR(255)                             NOT NULL,
    proficiency_level   VARCHAR(255)                             NOT NULL,
    years_of_experience DOUBLE PRECISION,
    description         VARCHAR(255),
    created_at          TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_employee_skills PRIMARY KEY (skill_id)
);

CREATE TABLE employees
(
    employee_id       INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    employee_code     VARCHAR(255)                             NOT NULL,
    first_name        VARCHAR(255)                             NOT NULL,
    last_name         VARCHAR(255)                             NOT NULL,
    birth_date        date                                     NOT NULL,
    gender            VARCHAR(255),
    id_number         VARCHAR(255)                             NOT NULL,
    permanent_address VARCHAR(255),
    temporary_address VARCHAR(255),
    personal_email    VARCHAR(255),
    company_email     VARCHAR(255),
    phone_number      VARCHAR(255),
    marital_status    VARCHAR(255),
    bank_account      VARCHAR(255),
    bank_name         VARCHAR(255),
    tax_code          VARCHAR(255),
    created_at        TIMESTAMP WITHOUT TIME ZONE,
    updated_at        TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_employees PRIMARY KEY (employee_id)
);

CREATE TABLE employment_history
(
    history_id      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    employee_id     INTEGER,
    department_id   INTEGER,
    position_id     INTEGER,
    start_date      date                                     NOT NULL,
    end_date        date,
    is_current      BOOLEAN,
    transfer_reason VARCHAR(255),
    decision_number VARCHAR(255),
    created_at      TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_employment_history PRIMARY KEY (history_id)
);

CREATE TABLE leaves
(
    leave_id    INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    employee_id INTEGER,
    leave_type  VARCHAR(255)                             NOT NULL,
    start_date  date                                     NOT NULL,
    end_date    date                                     NOT NULL,
    total_days  DOUBLE PRECISION                         NOT NULL,
    status      VARCHAR(255)                             NOT NULL,
    reason      VARCHAR(255),
    approved_by INTEGER,
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_leaves PRIMARY KEY (leave_id)
);

CREATE TABLE performance_reviews
(
    review_id     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    employee_id   INTEGER,
    reviewer_id   INTEGER,
    review_period VARCHAR(255)                             NOT NULL,
    review_year   INTEGER                                  NOT NULL,
    overall_score DOUBLE PRECISION                         NOT NULL,
    strengths     VARCHAR(255),
    improvements  VARCHAR(255),
    comments      VARCHAR(255),
    status        VARCHAR(255)                             NOT NULL,
    created_at    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_performance_reviews PRIMARY KEY (review_id)
);

CREATE TABLE positions
(
    position_id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    position_name VARCHAR(255)                             NOT NULL,
    position_code VARCHAR(255)                             NOT NULL,
    level         INTEGER                                  NOT NULL,
    description   VARCHAR(255),
    created_at    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_positions PRIMARY KEY (position_id)
);

CREATE TABLE qualifications
(
    qualification_id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    employee_id        INTEGER,
    qualification_type VARCHAR(255)                             NOT NULL,
    qualification_name VARCHAR(255)                             NOT NULL,
    institution        VARCHAR(255)                             NOT NULL,
    issue_date         date                                     NOT NULL,
    expiry_date        date,
    description        VARCHAR(255),
    created_at         TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_qualifications PRIMARY KEY (qualification_id)
);

CREATE TABLE salary_records
(
    salary_id           INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    employee_id         INTEGER,
    month               INTEGER                                  NOT NULL,
    year                INTEGER                                  NOT NULL,
    base_salary         DOUBLE PRECISION                         NOT NULL,
    total_allowance     DOUBLE PRECISION                         NOT NULL,
    overtime_pay        DOUBLE PRECISION                         NOT NULL,
    deductions          DOUBLE PRECISION                         NOT NULL,
    insurance_deduction DOUBLE PRECISION                         NOT NULL,
    tax_amount          DOUBLE PRECISION                         NOT NULL,
    net_salary          DOUBLE PRECISION                         NOT NULL,
    payment_status      VARCHAR(255)                             NOT NULL,
    created_at          TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_salary_records PRIMARY KEY (salary_id)
);

CREATE TABLE training_records
(
    training_id          INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    employee_employee_id INTEGER,
    training_name        VARCHAR(255)                             NOT NULL,
    training_type        VARCHAR(255)                             NOT NULL,
    start_date           date                                     NOT NULL,
    end_date             date                                     NOT NULL,
    trainer              VARCHAR(255),
    status               VARCHAR(255)                             NOT NULL,
    result               VARCHAR(255),
    comments             VARCHAR(255),
    created_at           TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_training_records PRIMARY KEY (training_id)
);

CREATE TABLE users
(
    user_id       INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username      VARCHAR(255),
    password_hash VARCHAR(255),
    employee_id   INTEGER,
    created_at    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_users PRIMARY KEY (user_id)
);

ALTER TABLE contracts
    ADD CONSTRAINT uc_contracts_contract_code UNIQUE (contract_code);

ALTER TABLE employees
    ADD CONSTRAINT uc_employees_company_email UNIQUE (company_email);

ALTER TABLE employees
    ADD CONSTRAINT uc_employees_employee_code UNIQUE (employee_code);

ALTER TABLE employees
    ADD CONSTRAINT uc_employees_id_number UNIQUE (id_number);

ALTER TABLE positions
    ADD CONSTRAINT uc_positions_position_code UNIQUE (position_code);

ALTER TABLE users
    ADD CONSTRAINT uc_users_employee UNIQUE (employee_id);

ALTER TABLE allowances
    ADD CONSTRAINT FK_ALLOWANCES_ON_EMPLOYEE FOREIGN KEY (employee_id) REFERENCES employees (employee_id);

ALTER TABLE attendance
    ADD CONSTRAINT FK_ATTENDANCE_ON_EMPLOYEE FOREIGN KEY (employee_id) REFERENCES employees (employee_id);

ALTER TABLE contracts
    ADD CONSTRAINT FK_CONTRACTS_ON_EMPLOYEE FOREIGN KEY (employee_id) REFERENCES employees (employee_id);

ALTER TABLE dependents
    ADD CONSTRAINT FK_DEPENDENTS_ON_EMPLOYEE FOREIGN KEY (employee_id) REFERENCES employees (employee_id);

ALTER TABLE employee_skills
    ADD CONSTRAINT FK_EMPLOYEE_SKILLS_ON_EMPLOYEE FOREIGN KEY (employee_id) REFERENCES employees (employee_id);

ALTER TABLE employment_history
    ADD CONSTRAINT FK_EMPLOYMENT_HISTORY_ON_DEPARTMENT FOREIGN KEY (department_id) REFERENCES departments (department_id);

ALTER TABLE employment_history
    ADD CONSTRAINT FK_EMPLOYMENT_HISTORY_ON_EMPLOYEE FOREIGN KEY (employee_id) REFERENCES employees (employee_id);

ALTER TABLE employment_history
    ADD CONSTRAINT FK_EMPLOYMENT_HISTORY_ON_POSITION FOREIGN KEY (position_id) REFERENCES positions (position_id);

ALTER TABLE leaves
    ADD CONSTRAINT FK_LEAVES_ON_APPROVED_BY FOREIGN KEY (approved_by) REFERENCES employees (employee_id);

ALTER TABLE leaves
    ADD CONSTRAINT FK_LEAVES_ON_EMPLOYEE FOREIGN KEY (employee_id) REFERENCES employees (employee_id);

ALTER TABLE performance_reviews
    ADD CONSTRAINT FK_PERFORMANCE_REVIEWS_ON_EMPLOYEE FOREIGN KEY (employee_id) REFERENCES employees (employee_id);

ALTER TABLE performance_reviews
    ADD CONSTRAINT FK_PERFORMANCE_REVIEWS_ON_REVIEWER FOREIGN KEY (reviewer_id) REFERENCES employees (employee_id);

ALTER TABLE qualifications
    ADD CONSTRAINT FK_QUALIFICATIONS_ON_EMPLOYEE FOREIGN KEY (employee_id) REFERENCES employees (employee_id);

ALTER TABLE salary_records
    ADD CONSTRAINT FK_SALARY_RECORDS_ON_EMPLOYEE FOREIGN KEY (employee_id) REFERENCES employees (employee_id);

ALTER TABLE training_records
    ADD CONSTRAINT FK_TRAINING_RECORDS_ON_EMPLOYEE_EMPLOYEE FOREIGN KEY (employee_employee_id) REFERENCES employees (employee_id);

ALTER TABLE users
    ADD CONSTRAINT FK_USERS_ON_EMPLOYEE FOREIGN KEY (employee_id) REFERENCES employees (employee_id);